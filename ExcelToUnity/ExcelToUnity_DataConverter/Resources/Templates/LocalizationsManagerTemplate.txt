/***
 * This script is automatically generated.
 ***/

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public abstract class LocalizationsManager
{
    public static Action OnLanguageChanged;

//LOCALIZED_DICTIONARY
	
    public static string CurrentLanguage
    {
        get => PlayerPrefs.GetString("CurrentLanguage", DefaultLanguage);
        set
        {
            if (CurrentLanguage != value && languages.Contains(value))
            {
                PlayerPrefs.SetString("CurrentLanguage", value);
                Init("");
            }
        }
    }

    public static void Init(string pLang)
    {
		if (languages.Contains(pLang))
			PlayerPrefs.SetString("CurrentLanguage", pLang);
//LOCALIZATION_INIT
        OnLanguageChanged?.Invoke();
    }

    public static IEnumerator InitAsync(string pLang)
    {
		if (languages.Contains(pLang))
			PlayerPrefs.SetString("CurrentLanguage", pLang);
//LOCALIZATION_INIT_ASYNC
        OnLanguageChanged?.Invoke();
    }
	
	public static void SetFolder(string pFolder)
	{
//LOCALIZATION_SET_FOLDER
	}

    public static void UseAddressable(bool pValue)
    {
//LOCALIZATION_USE_ADDRESSABLE
    }

    public static string GetSystemLanguage()
	{
		if (PlayerPrefs.HasKey("CurrentLanguage"))
			return PlayerPrefs.GetString("CurrentLanguage");

		var curLang = Application.systemLanguage;
		return curLang switch
		{
//LOCALIZATION_SYSTEM_LANGUAGE
		};
	}
}